'use strict';

var _chai = require('chai');

var _index = require('../index');

var _proxy = require('../proxy.instance');

var _proxy2 = _interopRequireDefault(_proxy);

var _helpers = require('./helpers');

var _helpers2 = _interopRequireDefault(_helpers);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('Instance Strategy', function () {
	var MockUserModel = _helpers2.default.MockUserModel;
	var DBURI = _helpers2.default.DBURI;
	var mockUser = void 0;
	var InstanceStrategy = void 0;

	before(_helpers2.default.openConnection);

	beforeEach(function () {
		mockUser = new MockUserModel({ name: "Jane Doe", age: 25 });
		InstanceStrategy = new _proxy2.default(mockUser);
	});

	afterEach(function () {
		return MockUserModel.remove({}).exec();
	});

	after(_helpers2.default.closeConnection);

	it('has reference to Mongoose document instance', function () {
		(0, _chai.expect)(mockUser.name).to.equal('Jane Doe');
		(0, _chai.expect)(mockUser.age).to.equal(25);
		(0, _chai.expect)(InstanceStrategy.dbInstance).to.equal(mockUser);
	});

	it('can refresh its instance', function (done) {
		(0, _chai.expect)(mockUser.age).to.equal(25);

		return InstanceStrategy.dbInstance.set({ age: 30 }).save() // must be saved before refresh
		.then(function (dbInstance) {
			return InstanceStrategy.refresh();
		}).then(function (refreshedInstance) {
			(0, _chai.expect)(InstanceStrategy.dbInstance.age).to.equal(30);
			done();
		});
	});

	it('can update its instance', function () {
		return InstanceStrategy.save() // must be saved before refresh
		.then(function (instance) {
			(0, _chai.expect)(InstanceStrategy.dbInstance.age).to.equal(25);
			return InstanceStrategy.update({ age: 20 });
		}).then(function (instance) {
			(0, _chai.expect)(instance.dbInstance.age).to.equal(20);
		});
	});

	it('can save its instance', function () {
		(0, _chai.expect)(InstanceStrategy.dbInstance.age).to.equal(25);
		InstanceStrategy.dbInstance.age = 20;

		return InstanceStrategy.save().then(function (instance) {
			(0, _chai.expect)(instance.dbInstance.age).to.equal(20);
		});
	});
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3N0cmF0ZWdpZXMvbW9uZ29vc2Utc3RyYXRlZ3kvc3BlYy9pbnN0YW5jZS5zdHJhdGVneS5zcGVjLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBRUEsU0FBUyxtQkFBVCxFQUE4QixZQUFZO0FBQ3pDLEtBQU0sZ0JBQWdCLGtCQUFRLGFBQTlCO0FBQ0EsS0FBTSxRQUFRLGtCQUFRLEtBQXRCO0FBQ0EsS0FBSSxpQkFBSjtBQUNBLEtBQUkseUJBQUo7O0FBR0EsUUFBTyxrQkFBUSxjQUFmOztBQUVBLFlBQVcsWUFBWTtBQUN0QixhQUFXLElBQUksYUFBSixDQUFrQixFQUFFLE1BQU0sVUFBUixFQUFvQixLQUFLLEVBQXpCLEVBQWxCLENBQVg7QUFDQSxxQkFBbUIsb0JBQXdCLFFBQXhCLENBQW5CO0FBQ0EsRUFIRDs7QUFLQSxXQUFVLFlBQVk7QUFDckIsU0FBTyxjQUFjLE1BQWQsQ0FBcUIsRUFBckIsRUFBeUIsSUFBekIsRUFBUDtBQUNBLEVBRkQ7O0FBSUEsT0FBTSxrQkFBUSxlQUFkOztBQUdBLElBQUcsNkNBQUgsRUFBa0QsWUFBWTtBQUM3RCxvQkFBTyxTQUFTLElBQWhCLEVBQXNCLEVBQXRCLENBQXlCLEtBQXpCLENBQStCLFVBQS9CO0FBQ0Esb0JBQU8sU0FBUyxHQUFoQixFQUFxQixFQUFyQixDQUF3QixLQUF4QixDQUE4QixFQUE5QjtBQUNBLG9CQUFPLGlCQUFpQixVQUF4QixFQUFvQyxFQUFwQyxDQUF1QyxLQUF2QyxDQUE2QyxRQUE3QztBQUNBLEVBSkQ7O0FBTUEsSUFBRywwQkFBSCxFQUErQixVQUFVLElBQVYsRUFBZ0I7QUFDOUMsb0JBQU8sU0FBUyxHQUFoQixFQUFxQixFQUFyQixDQUF3QixLQUF4QixDQUE4QixFQUE5Qjs7QUFFQSxTQUFPLGlCQUFpQixVQUFqQixDQUE0QixHQUE1QixDQUFnQyxFQUFFLEtBQUssRUFBUCxFQUFoQyxFQUE2QyxJQUE3QyxHQUFvRDtBQUFwRCxHQUNMLElBREssQ0FDQSxVQUFVLFVBQVYsRUFBc0I7QUFDM0IsVUFBTyxpQkFBaUIsT0FBakIsRUFBUDtBQUNBLEdBSEssRUFJTCxJQUpLLENBSUEsVUFBVSxpQkFBVixFQUE2QjtBQUNsQyxxQkFBTyxpQkFBaUIsVUFBakIsQ0FBNEIsR0FBbkMsRUFDRSxFQURGLENBQ0ssS0FETCxDQUNXLEVBRFg7QUFFQTtBQUNBLEdBUkssQ0FBUDtBQVVBLEVBYkQ7O0FBZUEsSUFBRyx5QkFBSCxFQUE4QixZQUFZO0FBQ3pDLFNBQU8saUJBQWlCLElBQWpCLEdBQXdCO0FBQXhCLEdBQ0wsSUFESyxDQUNBLFVBQVUsUUFBVixFQUFvQjtBQUN6QixxQkFBTyxpQkFBaUIsVUFBakIsQ0FBNEIsR0FBbkMsRUFBd0MsRUFBeEMsQ0FBMkMsS0FBM0MsQ0FBaUQsRUFBakQ7QUFDQSxVQUFPLGlCQUFpQixNQUFqQixDQUF3QixFQUFFLEtBQUssRUFBUCxFQUF4QixDQUFQO0FBQ0EsR0FKSyxFQUtMLElBTEssQ0FLQSxVQUFVLFFBQVYsRUFBb0I7QUFDekIscUJBQU8sU0FBUyxVQUFULENBQW9CLEdBQTNCLEVBQWdDLEVBQWhDLENBQW1DLEtBQW5DLENBQXlDLEVBQXpDO0FBQ0EsR0FQSyxDQUFQO0FBU0EsRUFWRDs7QUFZQSxJQUFHLHVCQUFILEVBQTRCLFlBQVk7QUFDdkMsb0JBQU8saUJBQWlCLFVBQWpCLENBQTRCLEdBQW5DLEVBQXdDLEVBQXhDLENBQTJDLEtBQTNDLENBQWlELEVBQWpEO0FBQ0EsbUJBQWlCLFVBQWpCLENBQTRCLEdBQTVCLEdBQWtDLEVBQWxDOztBQUVBLFNBQU8saUJBQWlCLElBQWpCLEdBQ0wsSUFESyxDQUNBLFVBQVUsUUFBVixFQUFvQjtBQUN6QixxQkFBTyxTQUFTLFVBQVQsQ0FBb0IsR0FBM0IsRUFBZ0MsRUFBaEMsQ0FBbUMsS0FBbkMsQ0FBeUMsRUFBekM7QUFDQSxHQUhLLENBQVA7QUFLQSxFQVREO0FBWUEsQ0FsRUQiLCJmaWxlIjoiaW5zdGFuY2Uuc3RyYXRlZ3kuc3BlYy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV4cGVjdCB9IGZyb20gJ2NoYWknO1xuaW1wb3J0IHsgZGJNYW5hZ2VyIGFzIG1vbmdvb3NlIH0gZnJvbSAnLi4vaW5kZXgnO1xuaW1wb3J0IEluc3RhbmNlQ29uc3RydWN0b3IgZnJvbSAnLi4vcHJveHkuaW5zdGFuY2UnO1xuaW1wb3J0IGhlbHBlcnMgZnJvbSAnLi9oZWxwZXJzJ1xuXG5kZXNjcmliZSgnSW5zdGFuY2UgU3RyYXRlZ3knLCBmdW5jdGlvbiAoKSB7XG5cdGNvbnN0IE1vY2tVc2VyTW9kZWwgPSBoZWxwZXJzLk1vY2tVc2VyTW9kZWw7XG5cdGNvbnN0IERCVVJJID0gaGVscGVycy5EQlVSSTtcblx0bGV0IG1vY2tVc2VyO1xuXHRsZXQgSW5zdGFuY2VTdHJhdGVneTtcblxuXG5cdGJlZm9yZShoZWxwZXJzLm9wZW5Db25uZWN0aW9uKTtcblxuXHRiZWZvcmVFYWNoKGZ1bmN0aW9uICgpIHtcblx0XHRtb2NrVXNlciA9IG5ldyBNb2NrVXNlck1vZGVsKHsgbmFtZTogXCJKYW5lIERvZVwiLCBhZ2U6IDI1IH0pXG5cdFx0SW5zdGFuY2VTdHJhdGVneSA9IG5ldyBJbnN0YW5jZUNvbnN0cnVjdG9yKG1vY2tVc2VyKTtcblx0fSlcblxuXHRhZnRlckVhY2goZnVuY3Rpb24gKCkge1xuXHRcdHJldHVybiBNb2NrVXNlck1vZGVsLnJlbW92ZSh7fSkuZXhlYygpO1xuXHR9KVxuXG5cdGFmdGVyKGhlbHBlcnMuY2xvc2VDb25uZWN0aW9uKTtcblxuXG5cdGl0KCdoYXMgcmVmZXJlbmNlIHRvIE1vbmdvb3NlIGRvY3VtZW50IGluc3RhbmNlJywgZnVuY3Rpb24gKCkge1xuXHRcdGV4cGVjdChtb2NrVXNlci5uYW1lKS50by5lcXVhbCgnSmFuZSBEb2UnKTtcblx0XHRleHBlY3QobW9ja1VzZXIuYWdlKS50by5lcXVhbCgyNSk7XG5cdFx0ZXhwZWN0KEluc3RhbmNlU3RyYXRlZ3kuZGJJbnN0YW5jZSkudG8uZXF1YWwobW9ja1VzZXIpO1xuXHR9KTtcblxuXHRpdCgnY2FuIHJlZnJlc2ggaXRzIGluc3RhbmNlJywgZnVuY3Rpb24gKGRvbmUpIHtcblx0XHRleHBlY3QobW9ja1VzZXIuYWdlKS50by5lcXVhbCgyNSk7XG5cblx0XHRyZXR1cm4gSW5zdGFuY2VTdHJhdGVneS5kYkluc3RhbmNlLnNldCh7IGFnZTogMzAgfSkuc2F2ZSgpIC8vIG11c3QgYmUgc2F2ZWQgYmVmb3JlIHJlZnJlc2hcblx0XHRcdC50aGVuKGZ1bmN0aW9uIChkYkluc3RhbmNlKSB7XG5cdFx0XHRcdHJldHVybiBJbnN0YW5jZVN0cmF0ZWd5LnJlZnJlc2goKVxuXHRcdFx0fSlcblx0XHRcdC50aGVuKGZ1bmN0aW9uIChyZWZyZXNoZWRJbnN0YW5jZSkge1xuXHRcdFx0XHRleHBlY3QoSW5zdGFuY2VTdHJhdGVneS5kYkluc3RhbmNlLmFnZSlcblx0XHRcdFx0XHQudG8uZXF1YWwoMzApXG5cdFx0XHRcdGRvbmUoKVxuXHRcdFx0fSlcblxuXHR9KTtcblxuXHRpdCgnY2FuIHVwZGF0ZSBpdHMgaW5zdGFuY2UnLCBmdW5jdGlvbiAoKSB7XG5cdFx0cmV0dXJuIEluc3RhbmNlU3RyYXRlZ3kuc2F2ZSgpIC8vIG11c3QgYmUgc2F2ZWQgYmVmb3JlIHJlZnJlc2hcblx0XHRcdC50aGVuKGZ1bmN0aW9uIChpbnN0YW5jZSkge1xuXHRcdFx0XHRleHBlY3QoSW5zdGFuY2VTdHJhdGVneS5kYkluc3RhbmNlLmFnZSkudG8uZXF1YWwoMjUpO1xuXHRcdFx0XHRyZXR1cm4gSW5zdGFuY2VTdHJhdGVneS51cGRhdGUoeyBhZ2U6IDIwIH0pXG5cdFx0XHR9KVxuXHRcdFx0LnRoZW4oZnVuY3Rpb24gKGluc3RhbmNlKSB7XG5cdFx0XHRcdGV4cGVjdChpbnN0YW5jZS5kYkluc3RhbmNlLmFnZSkudG8uZXF1YWwoMjApO1xuXHRcdFx0fSlcblxuXHR9KVxuXG5cdGl0KCdjYW4gc2F2ZSBpdHMgaW5zdGFuY2UnLCBmdW5jdGlvbiAoKSB7XG5cdFx0ZXhwZWN0KEluc3RhbmNlU3RyYXRlZ3kuZGJJbnN0YW5jZS5hZ2UpLnRvLmVxdWFsKDI1KTtcblx0XHRJbnN0YW5jZVN0cmF0ZWd5LmRiSW5zdGFuY2UuYWdlID0gMjA7XG5cblx0XHRyZXR1cm4gSW5zdGFuY2VTdHJhdGVneS5zYXZlKClcblx0XHRcdC50aGVuKGZ1bmN0aW9uIChpbnN0YW5jZSkge1xuXHRcdFx0XHRleHBlY3QoaW5zdGFuY2UuZGJJbnN0YW5jZS5hZ2UpLnRvLmVxdWFsKDIwKTtcblx0XHRcdH0pXG5cblx0fSlcblxuXG59KTsiXX0=